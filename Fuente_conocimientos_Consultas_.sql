--Progamador Stiven Sosa


--------------------------------------------------------------CONSULTAS

--Consultas Simples

--CONSULTA 1
--Seleccionamos las horas de inicio y fin de los cursos de todos los estudiantes que tienen 
--matriculadas materias, con nombre de materia, nombre de estudiante, y dis de la semana
CREATE VIEW vEstudiantes_horas_cursos as
	SELECT NOMBRE_ESTUDIANTE,NOMBRE_MATERIA,HORA_INICIO,HORA_FIN,DIA_SEMANA
	FROM ESTUDIANTES E INNER JOIN MATRICULAS M
	ON E.CARNET = M.CARNET
		INNER JOIN PAGOS P
			ON M.NUM_MATRICULA = P.NUM_MATRICULA
				INNER JOIN MATERIAS_ABIERTAS MA
					ON P.COD_MATERIA_ABIERTA = MA.COD_MATERIA_ABIERTA
						INNER JOIN HORARIOS H
							ON MA.COD_MATERIA_ABIERTA= H.COD_MATERIA_ABIERTA
							INNER JOIN MATERIAS MT
								ON MA.COD_MATERIA = MT.COD_MATERIA
 
GO

--CONSULTA 2
--Esta consulta muestra aquellas materias que no han sido abiertas, por lo tanto no tienen conexion con
--ninguna materia de materias abiertas
CREATE VIEW vMATERIAS_CERRADAS as
	SELECT NOMBRE_MATERIA, COSTO_MATERIA, REQUISITO
	FROM MATERIAS_ABIERTAS RIGHT JOIN MATERIAS
		ON MATERIAS_ABIERTAS.COD_MATERIA = MATERIAS.COD_MATERIA
			WHERE COD_MATERIA_ABIERTA IS NULL
GO

--CONSULTA 3
--Esta consulta nos devuelve aquellos profesores que aun no han sido asignados a alguna materia
CREATE VIEW vProfesores_sin_materias as
	SELECT NOMBRE_PROFESOR, APELLIDO1 + ' '+ APELLIDO2 AS APELLIDOS
	FROM PROFESORES LEFT JOIN MATERIAS_ABIERTAS
		ON PROFESORES.COD_PROF = MATERIAS_ABIERTAS.COD_PROF
			WHERE MATERIAS_ABIERTAS.COD_PROF IS NULL
GO

--CONSULTA 4
--Esta consulta muestra todos los estudiantes que tienen al menos una matricula
CREATE VIEW vEst_matriculados as
	SELECT ESTUDIANTES.CARNET, NOMBRE_ESTUDIANTE+' '+ APELLIDO1+' '+APELLIDO2 AS NOMBRE_COMPLETO
	FROM ESTUDIANTES FULL JOIN MATRICULAS
		ON ESTUDIANTES.CARNET =MATRICULAS.CARNET
			WHERE ESTUDIANTES.CARNET = MATRICULAS.CARNET
GO
--CONSULTA 5
--Esta consulta nos devuelve las materias matriculadas por estudiantes que nacierón despues de 1996
CREATE VIEW vMateria_estudiantes_1996_mas as
	SELECT E.CARNET, NOMBRE_MATERIA, FECHA_NACIMIENTO, NOMBRE_ESTUDIANTE+' '+APELLIDO1+' '+APELLIDO2 AS NOMBRE_COMPLETO
	FROM ESTUDIANTES E INNER JOIN MATRICULAS M
		ON E.CARNET = M.CARNET
			INNER JOIN PAGOS P
				ON M.NUM_MATRICULA= P.NUM_MATRICULA
					INNER JOIN MATERIAS_ABIERTAS MA
						ON P.COD_MATERIA_ABIERTA = MA.COD_MATERIA_ABIERTA
							INNER JOIN MATERIAS MAT
								ON MA.COD_MATERIA = MAT.COD_MATERIA
									WHERE YEAR(FECHA_NACIMIENTO) > 1996
GO
--CONSULTA 6
--Esta consulta nos devuelve el codigo materia, codigo materia abierta
--de aquellas materias que se imparten los miercoles despues de las 12:00 pm
CREATE VIEW vMaterias_12_abajo as 
	SELECT M.COD_MATERIA,MA.COD_MATERIA_ABIERTA,NOMBRE_MATERIA
	FROM MATERIAS_ABIERTAS MA INNER JOIN MATERIAS M
		ON MA.COD_MATERIA = M.COD_MATERIA
			INNER JOIN HORARIOS H
				ON MA.COD_MATERIA_ABIERTA = H.COD_MATERIA_ABIERTA
					WHERE DIA_SEMANA = 'M' AND HORA_INICIO > '12:00:00.0'
GO

--------------------------------------CONSULTAS FUNCIONES AGREGADAS

--CONSULTA 1
--Consulta que nos devuelve nombre y el monto de las materias canceladas donde el carnet 
--del estudiante es el 1
CREATE VIEW vEstudiantes_1_cancel_mats as
SELECT NOMBRE_ESTUDIANTE, SUM(MAT.COSTO_MATERIA) AS MONTO_MATERIAS
FROM ESTUDIANTES E INNER JOIN MATRICULAS M
	ON E.CARNET = M.CARNET
		INNER JOIN PAGOS P
			ON M.NUM_MATRICULA = P.NUM_MATRICULA
				INNER JOIN MATERIAS_ABIERTAS MA
					ON P.COD_MATERIA_ABIERTA = MA.COD_MATERIA_ABIERTA
						INNER JOIN MATERIAS MAT
							ON MA.COD_MATERIA = MAT.COD_MATERIA
								WHERE E.CARNET = 1 AND P.ESTADO_PAGO = 'CANCELADO'
								GROUP BY NOMBRE_ESTUDIANTE
GO


--CONSULTA 2
--Consulta que nos devuelve nombre de los programas que tienen mas de 3 materias
CREATE VIEW vProgrmas_mas_3_mats as
	SELECT NOMBRE_PROGRAMA, COUNT(MAT.ID_PROGRAMA) AS NUMERO_MATERIAS
	FROM PROGRAMAS PR INNER JOIN MATERIAS MAT
		ON PR.ID_PROGRAMA = MAT.ID_PROGRAMA
			WHERE PR.ID_PROGRAMA = MAT.ID_PROGRAMA
			GROUP BY NOMBRE_PROGRAMA
			HAVING COUNT(MAT.ID_PROGRAMA)> 3
GO
--CONSULTA 3
--Consulta que nos devuelve la cantidad de feriado despues del mes numero 5 del año 2021
CREATE VIEW vFeriado_mas_mayo as
	SELECT AA.ANIO, COUNT(YEAR(FECHA)) AS DIAS_FERIADOS
	FROM AGENDAS_ANIOS AA INNER JOIN AGENDA_FERIADOS AF
		ON AA.ANIO = AF.ANIO
			WHERE DATEPART(MM,FECHA) > 5 AND YEAR(FECHA)=2021
			GROUP BY AA.ANIO
GO

--CONSULTA 4
--Consulta que nos devuelve los profesores que tienen matriculadas materias
--y que poseen certificacion de grado licenciatura
CREATE VIEW vProf_Cert_licen_activos as
SELECT NOMBRE_PROFESOR, MA.COD_MATERIA_ABIERTA, SUBSTRING(CP.GRADO,1,3) AS GRADO
FROM MATERIAS_ABIERTAS MA INNER JOIN PROFESORES P
	ON MA.COD_PROF = P.COD_PROF
		INNER JOIN CERTIFICACIONES_PROFESORES CP
			ON P.COD_PROF = CP.COD_PROF
				WHERE SUBSTRING(CP.GRADO,1,3)= 'LIC'
				GROUP BY NOMBRE_PROFESOR, MA.COD_MATERIA_ABIERTA,GRADO
GO

--CONSULTA 5
--Consulta que muestra el profesor  a cuantos programas esta relacionado y a cuantas materias de ese programa
CREATE VIEW vProf_progr_mats_rela as
SELECT NOMBRE_PROFESOR,COUNT(P.ID_PROGRAMA) AS CANT_PROGRAMAS, COUNT(COD_MATERIA_ABIERTA) AS MATERIAS
FROM PROGRAMAS P INNER JOIN MATERIAS MAT
	ON P.ID_PROGRAMA = MAT.ID_PROGRAMA
	INNER JOIN MATERIAS_ABIERTAS MA
	 ON MAT.COD_MATERIA = MA.COD_MATERIA_ABIERTA
		INNER JOIN PROFESORES PRF
			ON MA.COD_PROF = PRF.COD_PROF
			GROUP BY NOMBRE_PROFESOR			
GO

--CONSULTA 6
--Consulta que devuelve cantidad de materias que se imparten por dia de semana
CREATE VIEW vDia_materias as
SELECT DIA_SEMANA, COUNT(DIA_SEMANA)AS CANT_MATERIAS
FROM MATERIAS_ABIERTAS MA INNER JOIN HORARIOS H
	ON MA.COD_MATERIA_ABIERTA = H.COD_MATERIA_ABIERTA
		INNER JOIN MATERIAS MAT
			ON MA.COD_MATERIA = MAT.COD_MATERIA
				GROUP BY DIA_SEMANA
GO			
--CONSULTA 7
--Consulta que muestra los programas y el costo promedios de las materias de cada uno
CREATE VIEW vProgramas_prom_costo_mats as
	SELECT NOMBRE_PROGRAMA,AVG(COSTO_MATERIA)AS COSTO_PROMEDIO
	FROM MATERIAS INNER JOIN PROGRAMAS
		ON MATERIAS.ID_PROGRAMA = PROGRAMAS.ID_PROGRAMA
		GROUP BY NOMBRE_PROGRAMA		
GO


--------------------------------------CONSULTAS ORDENADO DATOS
--CONSULTA 1
--Estudiantes ordenados por nombre que tiene al menos una matricula
SELECT NOMBRE_ESTUDIANTE, ESTUDIANTES.CARNET, APELLIDO1, APELLIDO2
FROM ESTUDIANTES RIGHT JOIN MATRICULAS
	ON ESTUDIANTES.CARNET = MATRICULAS.CARNET
ORDER BY NOMBRE_ESTUDIANTE
GO


--CONSULTA 2
--Estudiantes que tienen materias matriculadas, ordenados por nombre de materia descendentemente
SELECT NOMBRE_MATERIA, NOMBRE_ESTUDIANTE
FROM ESTUDIANTES E INNER JOIN MATRICULAS M
	ON E.CARNET = M.CARNET 
		INNER JOIN PAGOS P
			ON M.NUM_MATRICULA = P.NUM_MATRICULA
				INNER JOIN MATERIAS_ABIERTAS MA
					ON P.COD_MATERIA_ABIERTA = MA.COD_MATERIA_ABIERTA
						INNER JOIN MATERIAS MAT
							ON MA.COD_MATERIA = MAT.COD_MATERIA
							ORDER BY NOMBRE_MATERIA DESC
GO

--------------------------------------CONSULTAS DE UNION O SUBCONSULTAS
--CONSULTA 1
--Consulta que realiza la busqueda de los carnets de los estudiantes de la letra inicial asignada despues del like
--Y el numero d matriculas asociadas a ese estudiante
CREATE VIEW vEst_matriculas_letra_incial as
	SELECT CARNET,count(NUM_MATRICULA) AS NUMERO_MATRICULAS
	FROM MATRICULAS
	WHERE CARNET IN(SELECT CARNET FROM ESTUDIANTES WHERE SUBSTRING(NOMBRE_ESTUDIANTE,1,1) LIKE 'M')
	GROUP BY CARNET
go

--CONSULTA 2
--Consulta que devuelve las materias abiertas que tiene un costo mayor a 200,000
CREATE VIEW vMats_mas_200000 as
	SELECT COD_MATERIA_ABIERTA
	FROM MATERIAS_ABIERTAS
	WHERE COD_MATERIA_ABIERTA IN (SELECT COD_MATERIA FROM MATERIAS WHERE COSTO_MATERIA > 200000)
GO
--------------------------------PROCEDIMIENTO PARA ABRIR MATERIAS
/*
CREATE OR ALTER PROCEDURE ABRIR_MATERIAS(@COD_MAT INT,@ID_LAB INT,@COD_PROF INT,@ANIO SMALLINT,
											@H_INICIO TIME,@H_FIN TIME,@DIA VARCHAR(1),@MSJ VARCHAR(100)OUT)
AS
	BEGIN TRY
		BEGIN TRANSACTION
			SET @H_FIN = DATEADD(MINUTE,-1,@H_FIN)
			IF NOT EXISTS(SELECT 1 FROM MATERIAS_ABIERTAS MA INNER JOIN HORARIOS H
						ON MA.COD_MATERIA_ABIERTA = H.COD_MATERIA_ABIERTA
							INNER JOIN LABORATORIOS L
								ON MA.ID_LABORATORIO = L.ID_LABORATORIO									
							WHERE /*MA.COD_PROF = @COD_PROF*/((HORA_INICIO BETWEEN @H_INICIO AND @H_FIN) AND (HORA_FIN BETWEEN @H_INICIO AND @H_FIN))
							AND MA.ID_LABORATORIO = @ID_LAB AND DIA_SEMANA = @DIA)
				BEGIN
					IF NOT EXISTS(SELECT 1 FROM MATERIAS_ABIERTAS MA INNER JOIN HORARIOS H
									ON MA.COD_MATERIA_ABIERTA = H.COD_MATERIA_ABIERTA
											INNER JOIN PROFESORES PR
												ON MA.COD_PROF = PR.COD_PROF
													WHERE MA.COD_PROF = @COD_PROF AND ((HORA_INICIO BETWEEN @H_INICIO AND @H_FIN) AND (HORA_FIN BETWEEN @H_INICIO AND @H_FIN)))
						BEGIN
							INSERT INTO 
						END
					ELSE
						BEGIN
							SET @MSJ = 'EL profesor que desea introducir ya esta asignado a otra materia en este mismo horario'
						END
				END
			ELSE
				BEGIN 
					SET @MSJ = 'No se puede introducir ese horario, ya hay una materia con ese dia, esa hora y laboratorio'
				END				
		COMMIT TRANSACTION
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION
		SET @MSJ = ERROR_MESSAGE()
	END CATCH
GO

DECLARE @COD_MAT INT,@ID_LAB INT,@COD_PROF INT,@ANIO SMALLINT,
			@H_INICIO TIME,@H_FIN TIME,@DIA VARCHAR(1),@MSJ VARCHAR(100)
	
	SET @COD_MAT = 6
	SET @ID_LAB = 6
	SET @COD_PROF = 5
	SET @ANIO = 2021
	SET @DIA = 'V'
	SET @H_INICIO = '14:00:00.0'
	SET @H_FIN = '17:00:00.0'

EXECUTE [DBO].[ABRIR_MATERIAS]
	@COD_MAT,@ID_LAB,@COD_PROF,@ANIO,
	@H_INICIO,@H_FIN,@DIA, @MSJ OUTPUT
	PRINT @MSJ		
GO	
*/
